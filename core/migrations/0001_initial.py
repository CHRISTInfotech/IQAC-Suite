# Generated by Django 5.2.3 on 2025-10-31 10:44

import core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ApprovalFlowConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("require_faculty_incharge_first", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="CDLCommunicationThread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CDLMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("body", models.TextField()),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="cdl/messages/"),
                ),
                ("sent_via_email", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="CDLRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wants_cdl", models.BooleanField(db_index=True, default=False)),
                ("need_poster", models.BooleanField(db_index=True, default=False)),
                (
                    "poster_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("make", "Ask CDL to make the poster"),
                            ("correct", "Provide my own poster for correction"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "poster_organization_name",
                    models.CharField(blank=True, max_length=255),
                ),
                ("poster_time", models.CharField(blank=True, max_length=100)),
                ("poster_date", models.CharField(blank=True, max_length=100)),
                ("poster_venue", models.CharField(blank=True, max_length=255)),
                (
                    "poster_resource_person",
                    models.CharField(blank=True, max_length=255),
                ),
                (
                    "poster_resource_designation",
                    models.CharField(blank=True, max_length=255),
                ),
                ("poster_title", models.CharField(blank=True, max_length=255)),
                ("poster_summary", models.TextField(blank=True)),
                ("poster_design_link", models.URLField(blank=True)),
                (
                    "poster_final_approved",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("svc_photography", models.BooleanField(default=False)),
                ("svc_videography", models.BooleanField(default=False)),
                ("svc_digital_board", models.BooleanField(default=False)),
                ("svc_voluntary_cards", models.BooleanField(default=False)),
                (
                    "need_certificate_any",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("need_certificate_cdl", models.BooleanField(default=False)),
                (
                    "certificate_mode",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("make", "Ask CDL to make the certificate"),
                            ("correct", "Provide my own certificate for correction"),
                        ],
                        max_length=20,
                    ),
                ),
                ("certificate_design_link", models.URLField(blank=True)),
                ("combined_design_link", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="CertificateBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("csv_file", models.FileField(upload_to="cdl/certificates/")),
                (
                    "ai_check_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("passed", "Passed"),
                            ("failed", "Failed"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="CertificateEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("CORE", "Core"),
                            ("HEAD", "Head"),
                            ("PARTICIPANT", "Participant"),
                            ("OTHER", "Other"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("custom_role_text", models.CharField(blank=True, max_length=255)),
                ("ai_valid", models.BooleanField(db_index=True, default=False)),
                ("ai_errors", models.TextField(blank=True)),
                ("ready_for_cdl", models.BooleanField(db_index=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(db_index=True, max_length=20)),
                (
                    "academic_year",
                    models.CharField(
                        blank=True, db_index=True, max_length=9, null=True
                    ),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name="DashboardAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(blank=True, db_index=True, max_length=50)),
                (
                    "dashboard",
                    models.CharField(
                        choices=[
                            ("admin", "Admin Dashboard"),
                            ("faculty", "Faculty Dashboard"),
                            ("student", "Student Dashboard"),
                            ("cdl_head", "CDL Head Dashboard"),
                            ("cdl_work", "CDL Work Dashboard"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["dashboard"],
            },
        ),
        migrations.CreateModel(
            name="FacultyMeeting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("scheduled_at", models.DateTimeField(db_index=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-scheduled_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ImpersonationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                (
                    "code",
                    models.CharField(blank=True, max_length=64, null=True, unique=True),
                ),
                ("meta", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "ordering": ["org_type__name", "name"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("academic_year", models.CharField(db_index=True, max_length=9)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("faculty", "Faculty"),
                            ("tutor", "Tutor"),
                        ],
                        db_index=True,
                        default="student",
                        max_length=32,
                    ),
                ),
                ("is_primary", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="OrganizationRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("can_have_parent", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="POPSOAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "ordering": ["-assigned_at"],
            },
        ),
        migrations.CreateModel(
            name="POPSOChangeNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATE", "Created"),
                            ("UPDATE", "Updated"),
                            ("DELETE", "Deleted"),
                        ],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                (
                    "outcome_type",
                    models.CharField(
                        choices=[
                            ("PO", "Program Outcome"),
                            ("PSO", "Program Specific Outcome"),
                        ],
                        db_index=True,
                        max_length=3,
                    ),
                ),
                ("outcome_description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(db_index=True, default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "register_no",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("student", "Student"),
                            ("faculty", "Faculty"),
                            ("hod", "HOD"),
                            ("admin", "Admin"),
                            ("club_convenor", "Club Convenor"),
                            ("event_coordinator", "Event Coordinator"),
                            ("committee_member", "Committee Member"),
                            ("iqac_member", "IQAC Member"),
                        ],
                        db_index=True,
                        default="student",
                        max_length=32,
                    ),
                ),
                ("activated_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProgramOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProgramSpecificOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("description", models.TextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProofreadItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("file", "File"), ("text", "Text/Link")],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255)),
                ("content_text", models.TextField(blank=True)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="cdl/proofread/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ProofreadSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("changes_needed", "Changes Needed"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("annual", "Annual"),
                            ("event", "Event"),
                            ("iqac", "IQAC"),
                            ("custom", "Custom"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                ("file", models.FileField(blank=True, null=True, upload_to="reports/")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="RoleAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "academic_year",
                    models.CharField(
                        blank=True, db_index=True, max_length=9, null=True
                    ),
                ),
                (
                    "class_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=64, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoleEventApprovalVisibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_view", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="SDGGoal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="SidebarModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("label", models.CharField(max_length=120)),
                ("order", models.PositiveIntegerField(db_index=True, default=0)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["parent__id", "order", "key"],
            },
        ),
        migrations.CreateModel(
            name="SidebarPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(blank=True, db_index=True, max_length=50)),
                ("items", models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name="StudentAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("date_achieved", models.DateField(blank=True, null=True)),
                (
                    "document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=core.models.student_achievement_document_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf", "png", "jpg", "jpeg", "webp"]
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": [
                    models.OrderBy(
                        models.F("date_achieved"), descending=True, nulls_last=True
                    ),
                    "-created_at",
                ],
            },
        ),
        migrations.CreateModel(
            name="UserEventApprovalVisibility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("can_view", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(db_index=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ApprovalFlowTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("archived", "Archived")],
                        db_index=True,
                        default="active",
                        max_length=16,
                    ),
                ),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("step_order", models.PositiveIntegerField()),
                ("role_required", models.CharField(db_index=True, max_length=50)),
                ("optional", models.BooleanField(default=False)),
                (
                    "archived_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="archived_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["organization", "step_order"],
            },
        ),
        migrations.CreateModel(
            name="CDLCommunicationMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField()),
                (
                    "attachment",
                    models.FileField(
                        blank=True, null=True, upload_to="cdl/comm_attachments/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cdl_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
